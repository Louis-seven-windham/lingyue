文件解释
1、ping.py：查询工作状态，读取舵机的工作状态 2、read_write.py：从舵机内存控制表里读出数据和写数据到舵机内存控制表

3、read.py：从舵机内存控制表里读出数据

4、reg_write.py：异步写数据到舵机内存控制表

5、sync_read_write.py：同步向舵机内存控制表中读数据和写数据

6、sync_read.py：同步读取舵机内存控制表中的数据

7、sync_write.py：同步将数据写入舵机内存控制表

8、three_Inverse_kinematics.py：三连杆机械臂逆运动学算法，已知末端关节的位置和姿态（与X轴的夹角）求三个关节旋转的角度。

9、wheel.py：循环将数据写入舵机内存控制表中

10、write.py：将数据写入舵机内存控制表中

算法解析


L1、L2、L3分别为三根连杆的长度，θ1、θ2、θ3为与前杆的相对旋转角度。由于4、5号舵机连接结构与 3号的不同，3号:角度为正数 逆时针旋转 数值减小 -- 角度为负数 顺时针旋转 数值增大。4、5号:角度为正数 逆时针旋转 数值增大 -- 角度为负数 顺时针旋转 数值增大。

求解过程
A点坐标和末端关节姿态（与X轴夹角为0° ）已知

①求B点坐标

Bx = x - L3 * math.cos(theta)

By = y - L3 * math.sin(theta)

②求θ1

cosβ = (Bx^2+ By^2 + L1^2 -L2^2) / (2* L1 *sqrt(Bx^2 +By^2));

β = acos(cosβ)*180/pi;

α = atan2(By,Bx)*180/pi;

θ1=－（pi/2-α-β）; //数学上θ1为正，但应用上应为负值 ③求θ2

cosθ2 = (Bx^2 + By^2 - L1^2 - L2^2)/(2* L1 *L2);

θ2 = - acos(cosθ2 )*180/pi； //同理θ2改为负值

④求θ3

通过theta = θ1 + θ2 + θ3

求出θ3 = theta - θ1- θ2
